{"version":3,"sources":["geolocation.js","const.js","dataService.js","Search.js","App.js","index.js"],"names":["Geo","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","latitude","longitude","handleGetGeoClick","bind","assertThisInitialized","inherits","createClass","key","value","getGeo","options","_this2","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","then","position","coords","catch","err","alert","message","setState","liftingData","react_default","a","createElement","className","aria-pressed","onClick","onLoad","React","Component","APIkey","DataService","error","isLoaded","items","input","componentDidMount","prevProps","console","log","search","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","setTimeout","stop","_x","apply","arguments","_callee3","_context3","fetch","concat","_ref3","_callee2","res","_context2","json","abrupt","sent","_x2","result","_this3","_ref4","_callee4","_context4","_x3","_callee6","_context6","_ref6","_callee5","_context5","_x4","_this$state","_","isUndefined","name","main","temp","pressure","role","Search","event","preventDefault","target","id","onSubmit","handleSubmit","type","placeholder","onChange","handleChange","App","getInput","getPosition","geolocation_Geo","dataService_DataService","Search_Search","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.491c56fe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport class Geo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            latitude: null,\r\n            longitude: null\r\n        }\r\n        this.handleGetGeoClick = this.handleGetGeoClick.bind(this);\r\n    }\r\n\r\n    handleGetGeoClick() {\r\n        this.getGeo()    \r\n    }\r\n\r\n    getGeo() {\r\n        let getPosition = function (options) {\r\n            return new Promise((resolve, reject) => {\r\n              navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n            });\r\n        }\r\n          \r\n    getPosition()\r\n        .then((position) => {\r\n            this.coords = position\r\n            return this.coords\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        })\r\n        .then((coords) => { \r\n            this.setState({ latitude: coords.coords.latitude, longitude: coords.coords.longitude},\r\n                ()=>this.props.liftingData(this.state.latitude, this.state.longitude))\r\n            return this.coords \r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n        <div className=\"geoButton\">\r\n            <button className=\"geoButton-btn btn btn-primary btn-lg active\" aria-pressed=\"true\" onClick={this.handleGetGeoClick()}>\r\n                    Get coords\r\n            </button>\r\n             \r\n            <div onLoad={this.handleGetGeoClick()}> \r\n                Your latitude is:  {this.state.latitude ? this.state.latitude : '0.0'} ;     \r\n                Your longitude is:  {this.state.longitude ? this.state.longitude : '0.0'}\r\n            </div>\r\n        </div>\r\n        \r\n        )\r\n    }\r\n\r\n\r\n}","export const APIkey = '7a1ee10880b498dbc386741f0bb3f9dd'","import React from 'react';\r\nimport {APIkey} from './const.js'\r\nimport _ from 'lodash';\r\n\r\n\r\n\r\nexport class DataService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      input: '',\r\n    };\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.props.input !== prevProps.props.input) {\r\n      console.log(\"АСТАНАВИСЬ\")\r\n      this.search()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    new Promise(async (resolve) => {\r\n      await setTimeout(() => {\r\n        resolve(this.props)\r\n      }, 1000)\r\n    })\r\n    .then(\r\n      async () => {\r\n        await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${this.props.props.latitude}&lon=${this.props.props.longitude}&appid=${APIkey}`)\r\n        .then(async (res) => await res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            });\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  search() {\r\n    new Promise(async (resolve) => {\r\n        await setTimeout(() => {\r\n          resolve(this.props)\r\n        }, 1000)\r\n    })\r\n    .then(\r\n      async () => {\r\n        await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.props.props.input}&appid=${APIkey}`)\r\n        .then(async (res) => await res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            });\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLoaded,\r\n      items,\r\n    } = this.state;\r\n    if (this.state.error != null) {\r\n      return <div className=\"container-fluid data text-center\">API Server is not responding </div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n      <div className=\"text-center\">\r\n          <div className=\"spinner-border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n      </div>);\r\n    } else if (!(_.isUndefined(items))) {\r\n        return (\r\n          <div className=\"container-fluid data\">\r\n            In {items.name}.\r\n            Temperature now is {items.main.temp} F\r\n            Athmospheric pressure is {items.main.pressure} mbar\r\n          </div>\r\n        )\r\n      }\r\n      else {\r\n      return (\r\n          <div className=\"container-fluid data\">\r\n            Unable to get your GeoLocation or server went wrong\r\n          </div> \r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport class Search extends React.Component {\r\nconstructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        input: '',\r\n    }\r\n\r\n}\r\n\r\nhandleSubmit(event){\r\n    event.preventDefault();\r\n    console.log(this.state.input);\r\n    this.props.liftingData(this.state.input);\r\n    }\r\n\r\n\r\nhandleChange(event) {\r\n    this.setState({input: event.target.value})\r\n}\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"searchBar\">\r\n                <form onSubmit={this.handleSubmit.bind(this)}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"searchForm\" \r\n                            placeholder=\"Where do you live?\"\r\n                            value={this.state.input}\r\n                            onChange={this.handleChange.bind(this)}\r\n                           \r\n                        >\r\n                        </input>\r\n                    </div>\r\n                </form>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary searchButton\"\r\n                    onClick={this.handleSubmit.bind(this)}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div> \r\n        )\r\n    }\r\n}","import React from 'react';\r\n//import ReactDOM from 'react-dom'\r\nimport {Geo}  from './geolocation'\r\nimport {DataService} from './dataService'\r\nimport {Search} from './Search'\r\n\r\n\r\n\r\nexport class App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            latitude: null,\r\n            longitude: null,\r\n            input: '',\r\n        }\r\n\r\n    }\r\n    \r\n    \r\n    getInput = (input) => {\r\n        this.setState({\r\n            input\r\n        })\r\n        console.log('input is in APP')\r\n    }\r\n\r\n\r\n    getPosition = (latitude, longitude) => {\r\n         this.setState({\r\n            latitude,\r\n            longitude\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Geo liftingData={this.getPosition}/>\r\n                <DataService \r\n                     props={this.state}\r\n                />\r\n                <Search liftingData={this.getInput}/>              \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport {App} from './App.js';\r\n\r\n\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}