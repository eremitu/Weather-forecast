{"version":3,"sources":["geolocation.js","const.js","dataService.js","Search.js","dayNightButton.js","App.js","index.js"],"names":["Geo","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","latitude","longitude","handleGetGeoClick","bind","assertThisInitialized","inherits","createClass","key","value","getGeo","options","_this2","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","then","position","coords","catch","err","alert","message","setState","liftingData","react_default","a","createElement","className","onLoad","React","Component","APIkey","DataService","error","isLoaded","items","input","day","prevProps","search","getForecastByCoords","renderForecast","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","arguments","_callee3","_context3","fetch","concat","_ref3","_callee2","res","_context2","json","abrupt","sent","_x2","result","_this3","_ref4","_callee4","_context4","setTimeout","_x3","_callee6","_context6","_ref6","_callee5","_context5","_x4","data","filter","item","dt_txt","slice","link","weather","main","_this4","forecastData","list","dayNightFilter","map","dt","styles","width","src","pictureFilter","alt","description","temp","pressure","_this$state","_","isUndefined","city","name","role","Search","event","preventDefault","target","id","onSubmit","handleSubmit","type","placeholder","onChange","handleChange","onClick","DayNightButton","setDay","attachRef","show","isDay","bodyElement","document","body","style","background","backgroundSize","backgroundRepeat","rel","data-toggle","data-placement","title","App","getInput","getTimeOfDay","getPosition","dayNightButton_DayNightButton","geolocation_Geo","Search_Search","dataService_DataService","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.0186a3a6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport class Geo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            latitude: null,\r\n            longitude: null\r\n        }\r\n        this.handleGetGeoClick = this.handleGetGeoClick.bind(this);\r\n    }\r\n\r\n    handleGetGeoClick() {\r\n        this.getGeo()    \r\n    }\r\n\r\n    getGeo() {\r\n        let getPosition = function (options) {\r\n            return new Promise((resolve, reject) => {\r\n              navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n            });\r\n        }\r\n          \r\n    getPosition()\r\n        .then((position) => {\r\n            this.coords = position\r\n            return this.coords\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        })\r\n        .then((coords) => { \r\n            this.setState({ latitude: coords.coords.latitude, longitude: coords.coords.longitude},\r\n                ()=>this.props.liftingData(this.state.latitude, this.state.longitude))\r\n            return this.coords \r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"geoButton\">             \r\n            <div onLoad={this.handleGetGeoClick()}> \r\n                Your coordinates are: latitude {this.state.latitude ? this.state.latitude : '0.0'} ; longitude   {this.state.longitude ? this.state.longitude : '0.0'} \r\n                \r\n            </div>\r\n        </div>\r\n        \r\n        )\r\n    }\r\n\r\n\r\n}","export const APIkey = '7a1ee10880b498dbc386741f0bb3f9dd'","import React from 'react';\r\nimport {APIkey} from './const.js'\r\nimport _ from 'lodash';\r\n\r\n\r\n\r\nexport class DataService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      input: '',\r\n      day: true,\r\n    };\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.props.input !== prevProps.props.input) {\r\n      this.search()\r\n    }\r\n\r\n    if(this.props.props.latitude !== prevProps.props.latitude) {\r\n      this.getForecastByCoords()\r\n    }\r\n\r\n    if(this.props.props.day !== prevProps.props.day) {\r\n      this.renderForecast()\r\n    }\r\n  }\r\n\r\n  getForecastByCoords() {\r\n    new Promise(async (resolve) => {\r\n      await resolve(this.props)\r\n    })\r\n    .then(\r\n      async () => {\r\n        await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${this.props.props.latitude}&lon=${this.props.props.longitude}&appid=${APIkey}`)\r\n        .then(async (res) => await res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            });\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  search() {\r\n    new Promise(async (resolve) => {\r\n        await setTimeout(() => {\r\n          resolve(this.props)\r\n        }, 1000)\r\n    })\r\n    .then(\r\n      async () => {\r\n        await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${this.props.props.input}&appid=${APIkey}`)\r\n        .then(async (res) => await res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            });\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  dayNightFilter(data) {\r\n    if(this.props.props.day) {\r\n      return data.filter((item)=> { \r\n        return item.dt_txt.slice(11) === \"12:00:00\"\r\n      })\r\n    }\r\n    else if (!this.props.props.day) {\r\n      return data.filter((item)=> { \r\n        return item.dt_txt.slice(11) === \"00:00:00\" \r\n      })\r\n    }\r\n  }\r\n\r\n  pictureFilter(props) {\r\n    let weather = props.weather[0].main;\r\n    let link = '';\r\n    switch(weather) {\r\n      case 'Clouds':  \r\n        link = 'https://images.pexels.com/photos/414659/pexels-photo-414659.jpeg?auto=format%2Ccompress&cs=tinysrgb&dpr=2&h=750&w=1260'\r\n        break;\r\n    \r\n      case 'Rain': \r\n        link = 'https://cdn.pixabay.com/photo/2015/07/02/10/45/raindrops-828954_960_720.jpg'\r\n        break;\r\n\r\n      case 'Snow': \r\n        link = 'https://cdn.pixabay.com/photo/2014/04/05/11/05/ice-314281_960_720.jpg'\r\n        break;\r\n\r\n      case 'Clear': \r\n        link = 'https://images.pexels.com/photos/912110/pexels-photo-912110.jpeg?auto=format%2Ccompress&cs=tinysrgb&dpr=2&h=750&w=1260'\r\n        break;\r\n      default:\r\n        link = 'https://cdn.pixabay.com/photo/2014/08/27/15/05/clouds-429228_960_720.jpg'\r\n    };\r\n    return link;\r\n\r\n  }\r\n\r\n  renderForecast() {\r\n    let forecastData = this.state.items.list\r\n    let filteredData = this.dayNightFilter(forecastData)\r\n    const list = filteredData.map( item=>{\r\n      return (\r\n        <div key={item.dt} className=\"card-deck\">\r\n          <div  className=\"card\" styles={{width: \"18rem;\"}}> \r\n            <img src={this.pictureFilter(item)}\r\n              className=\"card-img-top\" \r\n              alt=\"...\">\r\n            </img>\r\n            <div className=\"card-body\">\r\n              <div className=\"card-text\">\r\n                <div>{item.dt_txt.slice(0,10)}</div>\r\n                <div>{item.weather[0].description}</div>\r\n                <div>Temperature is {item.main.temp} F </div>\r\n                <div>Athmospheric pressure is {item.main.pressure} mbar </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n    return (\r\n        <div className=\"card-deck\">\r\n          {list}\r\n        </div>\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLoaded,\r\n      items,\r\n    } = this.state;\r\n    if (this.state.error != null) {\r\n      return <div className=\"container-fluid data text-center\">API Server is not responding </div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n      <div className=\"text-center\">\r\n          <div className=\"spinner-border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n      </div>);\r\n    } else if (!(_.isUndefined(items))) {\r\n        return (\r\n          <div>\r\n            <h4 className=\"cityName\">\r\n              5 Days Weather Forecast {this.state.items.city.name}\r\n            </h4>\r\n            {this.renderForecast()}\r\n          </div>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <div className=\"container-fluid data\">\r\n            Unable to get your GeoLocation or server went wrong\r\n          </div> \r\n        );\r\n      }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport class Search extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            input: '',\r\n        }\r\n}\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        this.props.liftingData(this.state.input);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({input: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"searchBar\">\r\n                <form onSubmit={this.handleSubmit.bind(this)}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"searchForm\" \r\n                            placeholder=\"Where do you live?\"\r\n                            value={this.state.input}\r\n                            onChange={this.handleChange.bind(this)}\r\n                           \r\n                        >\r\n                        </input>\r\n                    </div>\r\n                </form>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary searchButton\"\r\n                    onClick={this.handleSubmit.bind(this)}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div> \r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\n\r\n\r\nexport class DayNightButton extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            day: true,\r\n        }\r\n    this.setDay = this.setDay.bind(this);\r\n\r\n    this.attachRef = target => this.setState({ target });\r\n    this.state = {\r\n      show: false,\r\n    };\r\n}\r\n\r\n    setDay() {\r\n        if (this.state.day === true) this.setState({day: false})\r\n        else this.setState({day: true})\r\n        this.props.isDay(this.state.day);\r\n    }\r\n\r\n    render() {\r\n        const isDay = this.state.day;\r\n        const DayButton = () => (\r\n            <button \r\n                id='dayButton'\r\n                type=\"button\" \r\n                onClick={this.setDay} \r\n                className=\"btn btn-primary btn-sm\"\r\n                title=\"Click to see night weather\"\r\n            >\r\n                Day weather\r\n            </button>\r\n        );\r\n        const NightButton = () => (\r\n            <button \r\n                id='nightButton'\r\n                type=\"button\"\r\n                rel='tooltip' \r\n                onClick={this.setDay} \r\n                className=\"btn btn-secondary btn-sm\" \r\n                data-toggle=\"tooltip\" \r\n                data-placement=\"right\" \r\n                title=\"Click to see day weather\"\r\n            >\r\n                 Weather at night\r\n            </button>\r\n        );\r\n        let bodyElement = document.body\r\n        if(isDay) {\r\n            bodyElement.style.background = \"url('https://images.pexels.com/photos/29435/landscape-sky-night-stars-29435.jpg?auto=format%2Ccompress&cs=tinysrgb&dpr=2&h=750&w=1260')\";\r\n            bodyElement.style.backgroundSize = '100% 100%';\r\n            bodyElement.style.backgroundRepeat = 'no-repeat';       \r\n        }\r\n        else if (!isDay){\r\n            document.body.style.background = \"url('https://images.pexels.com/photos/875858/pexels-photo-875858.png?auto=format%2Ccompress&cs=tinysrgb&dpr=2&h=750&w=1260')\";\r\n            bodyElement.style.backgroundSize = '100% 100%';\r\n            bodyElement.style.backgroundRepeat = 'no-repeat';  \r\n        }\r\n        return (\r\n            <div> \r\n                {isDay ? (\r\n                    <NightButton />\r\n                ) : (\r\n                    <DayButton />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\n//import ReactDOM from 'react-dom'\r\nimport {Geo}  from './geolocation'\r\nimport {DataService} from './dataService'\r\nimport {Search} from './Search'\r\nimport {DayNightButton} from './dayNightButton'\r\n\r\n\r\nexport class App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            latitude: null,\r\n            longitude: null,\r\n            input: '',\r\n            day: true,\r\n        }\r\n \r\n    }\r\n    \r\n    getInput = (input) => {\r\n        this.setState({\r\n            input\r\n        })\r\n    }\r\n\r\n    getTimeOfDay = (day) => {\r\n        this.setState({\r\n            day\r\n        })\r\n    }\r\n\r\n    getPosition = (latitude, longitude) => {\r\n         this.setState({\r\n            latitude,\r\n            longitude\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <DayNightButton isDay={this.getTimeOfDay}/>\r\n                <Geo liftingData={this.getPosition}/>\r\n                <Search liftingData={this.getInput}/>\r\n                <DataService \r\n                     props={this.state}\r\n                />\r\n                              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport {App} from './App.js';\r\n\r\n\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}