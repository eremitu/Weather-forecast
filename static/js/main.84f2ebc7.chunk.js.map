{"version":3,"sources":["geolocation.js","const.js","dataService.js","Search.js","dayNightButton.js","App.js","index.js"],"names":["Geo","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","latitude","longitude","error","locationUndefined","isLoaded","inherits","createClass","key","value","getGeo","_this2","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","setState","coords","liftingData","message","catch","react_default","a","createElement","className","React","Component","APIkey","DataService","responseStatus","items","input","day","prevProps","search","getForecastByCoords","renderForecast","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","arguments","then","_callee2","response","result","_context2","fetch","concat","sent","ok","json","status","_this3","_ref3","_callee3","_context3","_x2","_callee4","_context4","console","log","data","filter","item","dt_txt","slice","link","weather","main","_this4","forecastData","list","dayNightFilter","map","dt","styles","width","src","pictureFilter","alt","description","Math","round","temp","pressure","length","city","name","role","Search","event","preventDefault","target","id","onSubmit","handleSubmit","bind","type","placeholder","onChange","handleChange","onClick","DayNightButton","setDay","assertThisInitialized","attachRef","show","isDay","bodyElement","document","body","style","background","backgroundSize","backgroundRepeat","rel","data-toggle","data-placement","title","App","getInput","getTimeOfDay","getPosition","dayNightButton_DayNightButton","geolocation_Geo","Search_Search","dataService_DataService","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.84f2ebc7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport class Geo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            latitude: null,\r\n            longitude: null,\r\n            error: null,\r\n            locationUndefined: null,\r\n            isLoaded: null,\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getGeo()\r\n    }\r\n\r\n    getGeo() {\r\n            return new Promise((resolve, reject) => {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    position => {\r\n                        resolve(\r\n                            this.setState({\r\n                                latitude: position.coords.latitude,\r\n                                longitude: position.coords.longitude,\r\n                                locationUndefined: false\r\n                            },\r\n                                () => this.props.liftingData(this.state.latitude, this.state.longitude, this.state.locationUndefined)\r\n                            )\r\n                        )\r\n                    },\r\n                    error => {\r\n                        reject(\r\n                            this.setState({\r\n                                error: error.message,\r\n                                isLoaded: true,\r\n                                locationUndefined: true,\r\n                            },\r\n                            () => this.props.liftingData(this.error, this.isLoaded, this.state.locationUndefined)\r\n                            )\r\n                        )\r\n                    }\r\n                );\r\n            }).catch(error => error);\r\n        }\r\n\r\n    \r\n\r\n    render() {\r\n        return ( \r\n        <div className = \"geoButton\" >\r\n            <div > \r\n                {\r\n                this.state.error ? ' ' :\r\n                    ('Your coordinates are: latitude:' +\r\n                    this.state.latitude +\r\n                    '; longitude   ' +\r\n                    this.state.longitude)\r\n                } \r\n            </div> \r\n        </div>  \r\n        )\r\n    }\r\n}\r\n","export const APIkey = '7a1ee10880b498dbc386741f0bb3f9dd'","import React from 'react';\r\nimport {APIkey} from './const.js'\r\n\r\n\r\nexport class DataService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: false,\r\n      responseStatus: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      input: '',\r\n      day: true,\r\n       locationUndefined: null,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.props.input !== prevProps.props.input) {\r\n      this.search()\r\n    }\r\n    if(this.props.props.latitude !== prevProps.props.latitude) {\r\n      this.getForecastByCoords()\r\n    }\r\n    if(this.props.props.day !== prevProps.props.day) {\r\n      this.renderForecast()\r\n    }\r\n  }\r\n\r\n  getForecastByCoords() {\r\n    new Promise(async (resolve) => {\r\n      await resolve(this.props)\r\n    })\r\n    .then(\r\n      async () => {\r\n         let response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${this.props.props.latitude}&lon=${this.props.props.longitude}&appid=${APIkey}`)\r\n          if(response.ok) {\r\n            let result = await response.json()\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error: response.status,\r\n              response: response.status\r\n            });\r\n          }\r\n      }\r\n    )\r\n    .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n          });\r\n        },\r\n        (error) => {\r\n\r\n          this.setState({\r\n            isLoaded: true,\r\n            error: error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  search() {\r\n    new Promise(async (resolve) => {\r\n      await resolve(this.props)\r\n    })\r\n    .then(\r\n      async () => {\r\n         let response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${this.props.props.input}&appid=${APIkey}`)\r\n          if(response.ok) {\r\n            let result = await response.json()\r\n            console.log(result)\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            });\r\n          }\r\n          else {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error: response.status,\r\n              response: response.status\r\n            });\r\n          }\r\n      }\r\n    )\r\n    .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error: error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  dayNightFilter(data) {\r\n    if(this.props.props.day) {\r\n      return data.filter((item)=> { \r\n        return item.dt_txt.slice(11) === \"12:00:00\"\r\n      })\r\n    }\r\n    else if (!this.props.props.day) {\r\n      return data.filter((item)=> { \r\n        return item.dt_txt.slice(11) === \"00:00:00\" \r\n      })\r\n    }\r\n  }\r\n\r\n  pictureFilter(props) {\r\n    let weather = props.weather[0].main;\r\n    let link = '';\r\n    switch(weather) {\r\n      case 'Clouds':  \r\n        link = 'https://images.pexels.com/photos/414659/pexels-photo-414659.jpeg?auto=format%2Ccompress&cs=tinysrgb&dpr=2&h=750&w=1260'\r\n        break;\r\n    \r\n      case 'Rain': \r\n        link = 'https://cdn.pixabay.com/photo/2015/07/02/10/45/raindrops-828954_960_720.jpg'\r\n        break;\r\n\r\n      case 'Snow': \r\n        link = 'https://cdn.pixabay.com/photo/2014/04/05/11/05/ice-314281_960_720.jpg'\r\n        break;\r\n\r\n      case 'Clear': \r\n        link = 'https://images.pexels.com/photos/912110/pexels-photo-912110.jpeg?auto=format%2Ccompress&cs=tinysrgb&dpr=2&h=750&w=1260'\r\n        break;\r\n      default:\r\n        link = 'https://cdn.pixabay.com/photo/2014/08/27/15/05/clouds-429228_960_720.jpg'\r\n    };\r\n    return link;\r\n\r\n  }\r\n\r\n  renderForecast() {\r\n    let forecastData = this.state.items.list\r\n    let filteredData = this.dayNightFilter(forecastData)\r\n    const list = filteredData.map( item=>{\r\n      return (\r\n        <div key={item.dt} className=\"card-deck\">\r\n          <div  className=\"card\" styles={{width: \"18rem;\"}}> \r\n            <img src={this.pictureFilter(item)}\r\n              className=\"card-img-top\" \r\n              alt=\"...\">\r\n            </img>\r\n            <div className=\"card-body\">\r\n              <div className=\"card-text\">\r\n                <div>{item.dt_txt.slice(0,10)}</div>\r\n                <div>{item.weather[0].description}</div>\r\n                <div>Temperature is {Math.round(item.main.temp - 273.15)  } C </div>\r\n                <div>Athmospheric pressure is {item.main.pressure} mbar </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n    return (\r\n        <div className=\"card-deck\">\r\n          {list}\r\n        </div>\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLoaded,\r\n    } = this.state;\r\n    if (this.state.error && this.state.items.length === 0 ) {\r\n      return <div className=\"container-fluid data text-center\">unable to get your GeoLocation</div>;\r\n    } else if (!isLoaded) {\r\n        return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\"></span>\r\n            </div>\r\n        </div>);\r\n    } else {\r\n        return (\r\n          <div>\r\n            <h4 className=\"cityName\">\r\n              5 Days Weather Forecast: {this.state.items.city.name}\r\n            </h4>\r\n            {this.renderForecast()}\r\n          </div>\r\n        )\r\n      }\r\n\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nexport class Search extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            input: '',\r\n        }\r\n}\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        this.props.liftingData(this.state.input);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({input: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"searchBar\">\r\n                <form onSubmit={this.handleSubmit.bind(this)}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"searchForm\" \r\n                            placeholder=\"Where do you live?\"\r\n                            value={this.state.input}\r\n                            onChange={this.handleChange.bind(this)}\r\n                           \r\n                        >\r\n                        </input>\r\n                    </div>\r\n                </form>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary searchButton\"\r\n                    onClick={this.handleSubmit.bind(this)}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div> \r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\n\r\n\r\nexport class DayNightButton extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            day: true,\r\n        }\r\n    this.setDay = this.setDay.bind(this);\r\n\r\n    this.attachRef = target => this.setState({ target });\r\n    this.state = {\r\n      show: false,\r\n    };\r\n}\r\n\r\n    setDay() {\r\n        if (this.state.day === true) this.setState({day: false})\r\n        else this.setState({day: true})\r\n        this.props.isDay(this.state.day);\r\n    }\r\n\r\n    render() {\r\n        const isDay = this.state.day;\r\n        const DayButton = () => (\r\n            <button \r\n                id='dayButton'\r\n                type=\"button\" \r\n                onClick={this.setDay} \r\n                className=\"btn btn-primary btn-sm\"\r\n                title=\"Click to see night weather\"\r\n            >\r\n                Day weather\r\n            </button>\r\n        );\r\n        const NightButton = () => (\r\n            <button \r\n                id='nightButton'\r\n                type=\"button\"\r\n                rel='tooltip' \r\n                onClick={this.setDay} \r\n                className=\"btn btn-secondary btn-sm\" \r\n                data-toggle=\"tooltip\" \r\n                data-placement=\"right\" \r\n                title=\"Click to see day weather\"\r\n            >\r\n                 Weather at night\r\n            </button>\r\n        );\r\n        let bodyElement = document.body\r\n        if(isDay) {\r\n            bodyElement.style.background = \"url('https://images.pexels.com/photos/29435/landscape-sky-night-stars-29435.jpg?auto=format%2Ccompress&cs=tinysrgb&dpr=2&h=750&w=1260')\";\r\n            bodyElement.style.backgroundSize = '100% 100%';\r\n            bodyElement.style.backgroundRepeat = 'no-repeat';       \r\n        }\r\n        else if (!isDay){\r\n            document.body.style.background = \"url('https://images.pexels.com/photos/875858/pexels-photo-875858.png?auto=format%2Ccompress&cs=tinysrgb&dpr=2&h=750&w=1260')\";\r\n            bodyElement.style.backgroundSize = '100% 100%';\r\n            bodyElement.style.backgroundRepeat = 'no-repeat';  \r\n        }\r\n        return (\r\n            <div> \r\n                {isDay ? (\r\n                    <NightButton />\r\n                ) : (\r\n                    <DayButton />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\n//import ReactDOM from 'react-dom'\r\nimport {Geo}  from './geolocation'\r\nimport {DataService} from './dataService'\r\nimport {Search} from './Search'\r\nimport {DayNightButton} from './dayNightButton'\r\n\r\n\r\nexport class App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            latitude: null,\r\n            longitude: null,\r\n            input: '',\r\n            day: true,\r\n            locationUndefined: null,\r\n            isLoaded: true,\r\n        }\r\n    }\r\n    \r\n    getInput = (input) => {\r\n        this.setState({\r\n            input\r\n        })\r\n    }\r\n\r\n    getTimeOfDay = (day) => {\r\n        this.setState({\r\n            day\r\n        })\r\n    }\r\n\r\n    getPosition = (latitude, longitude, isLoaded, locationUndefined) => {\r\n         this.setState({\r\n            latitude,\r\n            longitude,\r\n            locationUndefined: locationUndefined,\r\n            isLoaded,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <DayNightButton isDay={this.getTimeOfDay}/>\r\n                <Geo liftingData={this.getPosition}/>\r\n                <Search liftingData={this.getInput}/>\r\n                <DataService \r\n                     props={this.state}\r\n                />\r\n                              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport {App} from './App.js';\r\n\r\n\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}